load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@bazel_gomock//:gomock.bzl", "gomock")

go_library(
    name = "go_default_library",
    srcs = [
        "helpers.go",
        "types.go",
        "users.go",
    ],
    importpath = "github.com/johanbrandhorst/bazel-mono/service/go-server/users",
    visibility = ["//visibility:public"],
    deps = [
        "//proto/myorg/users/v1:go_default_library",
        "//service/go-server/users/migrations",
        "@com_github_golang_migrate_migrate_v4//:go_default_library",
        "@com_github_golang_migrate_migrate_v4//database/postgres:go_default_library",
        "@com_github_golang_migrate_migrate_v4//source/go_bindata:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@com_github_jackc_pgconn//:go_default_library",
        "@com_github_jackc_pgtype//:go_default_library",
        "@com_github_jackc_pgx_v4//:go_default_library",
        "@com_github_jackc_pgx_v4//log/logrusadapter:go_default_library",
        "@com_github_jackc_pgx_v4//stdlib:go_default_library",
        "@com_github_masterminds_squirrel//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@io_bazel_rules_go//proto/wkt:duration_go_proto",
        "@io_bazel_rules_go//proto/wkt:timestamp_go_proto",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "mocks_test.go",
        "users_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//proto/myorg/users/v1:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_uw_labs_podrick//:go_default_library",
        "@com_github_uw_labs_podrick//runtimes/docker:go_default_library",
        "@dev_logur_adapter_logrus//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//metadata:go_default_library",  # keep
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

# keep
gomock(
    name = "list_users_service_mock",
    out = "mocks_test.go",
    interfaces = ["UserService_ListUsersServer"],
    library = "//proto/myorg/users/v1:go_default_library",
    package = "users_test",
)
